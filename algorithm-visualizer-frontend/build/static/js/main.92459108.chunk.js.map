{"version":3,"sources":["redux/actions/index.js","redux/constants/index.js","components/common/header/Header.js","components/home/searchbar/Searchbar.js","constants/index.js","components/home/algolist/AlgoList.js","components/home/Home.js","components/algorithm/svgtable/SvgTable.js","algorithms/bubblesort.js","algorithms/insertionsort.js","algorithms/selectionsort.js","algorithms/mergesort.js","algorithms/quicksort.js","components/algorithm/Algorithm.js","components/login/Login.js","components/signup/Signup.js","components/oauth2/Redirect/index.js","components/app/App.js","serviceWorker.js","redux/reducers/array/index.js","redux/reducers/currentIndex/index.js","redux/reducers/swap/index.js","redux/reducers/sortedArray/index.js","redux/reducers/user/index.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["setArray","arr","type","payload","toSwap","index1","index2","resetSwap","addCurrentIndex","nr","addIndexAt","i","val","position","resetCurentIndex","resetIndexAt","addToSorted","index","addUser","user","Header","props","this","resetUser","history","localStorage","removeItem","push","className","href","src","imageUrl","Navbar","Text","to","name","Button","variant","onClick","handleLogout","bind","bg","expand","Brand","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","Item","Form","inline","isLoggedIn","Component","connect","state","withRouter","Searchbar","InputGroup","FormControl","placeholder","aria-label","aria-describedby","Append","BASE_URL","ALGORITHMS","imageURL","authorizationLink","redirectUri","AlgoList","algorithms","map","algorithm","key","trim","toLowerCase","Home","SvgTable","array","swap","sortedArray","width","length","margin","bracket","startPoint","height","x","y","rgb","includes","transform","style","fill","sleep","ms","Promise","resolve","setTimeout","n","dispatch","pauseTime","func","a","donePass","j","temp","pos","min","sort","l","r","q","Math","floor","merge","n1","n2","L","R","Number","MAX_SAFE_INTEGER","k","p","Algorithm","speedSliderDefault","newArray","resetArrays","algorithmOn","e","target","parseInt","value","match","params","bubbleSort","stopAlgorithm","insertionSort","mergeSort","selectionSort","quickSort","htmlFor","onChange","handleChange","max","startAlgorithm","size","Login","item","usernameOrEmail","password","error","location","queryString","parse","from","search","setState","event","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","get","jwt","setItem","getItem","json","onSubmit","handleSubmit","Group","controlId","Label","Control","Check","label","ButtonGroup","window","Signup","username","email","required","RedirectOauth2","token","values","pathname","App","path","exact","component","Boolean","hostname","initialState","combineReducers","defaultState","action","Array","_","random","persistConfig","storage","stateReconciler","autoMergeLevel2","whitelist","blacklist","pReducer","persistReducer","rootReducer","store","createStore","persistor","persistStore","ReactDOM","render","loading","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92459108.chunk.js","sourcesContent":["import { ADD_USER, RESET_USER, RESET_ARRAY, SET_ARRAY, NEW_ARRAY, TO_SWAP, RESET_SWAP, ADD_CURRENT_INDEX,ADD_INDEX_AT, RESET_CURRENT_INDEX,RESET_INDEX_AT, ADD_TO_SORTED, RESET_SORTED} from '../constants';\n\nexport const newArray = size => ({\n    type: NEW_ARRAY,\n    payload: size\n});\n\nexport const setArray = arr => ({\n    type: SET_ARRAY,\n    payload: arr\n});\n\nexport const resetArray = () => ({\n    type: RESET_ARRAY\n});\n\n\nexport const toSwap= (index1, index2) => ({\n    type: TO_SWAP,\n    payload: {\n        index1,\n        index2\n    }\n});\nexport const resetSwap = () => ({\n    type: RESET_SWAP\n});\n\n\nexport const addCurrentIndex = (nr) => ({\n    type: ADD_CURRENT_INDEX,\n    payload: nr\n});\n\nexport const addIndexAt = (nr,i) => ({\n    type: ADD_INDEX_AT,\n    payload: {\n        val: nr,\n        position:i\n    }\n});\n\nexport const resetCurentIndex = () => ({\n    type: RESET_CURRENT_INDEX\n});\n\nexport const resetIndexAt = (i) => ({\n    type: RESET_INDEX_AT,\n    payload: i\n});\n\nexport const addToSorted = index => ({\n    type: ADD_TO_SORTED,\n    payload: index\n});\n\nexport const resetSorted = () => ({\n    type: RESET_SORTED\n});\n\n\nexport const addUser = (user) => ({\n    type: ADD_USER,\n    payload: user\n});\n\nexport const resetUser = () => ({\n    type: RESET_USER\n});","export const RESET_ARRAY = \"RESET_ARRAY\";\nexport const NEW_ARRAY = \"NEW_ARRAY\";\nexport const SET_ARRAY = \"SET_ARRAY\";\n\nexport const TO_SWAP = \"TO_SWAP\";\nexport const RESET_SWAP = \"RESET_SWAP\";\n\nexport const ADD_CURRENT_INDEX = \"ADD_CURRENT_INDEX\";\nexport const RESET_CURRENT_INDEX = \"RESET_CURRENT_INDEX\";\nexport const RESET_INDEX_AT = \"RESET_INDEX_AT\";\nexport const ADD_INDEX_AT = \"ADD_INDEX_AT\";\n\nexport const ADD_TO_SORTED = \"ADD_TO_SORTED\";\nexport const RESET_SORTED = \"RESET_SORTED\";\n\nexport const ADD_USER = \"ADD_USER\";\nexport const RESET_USER = \"RESET_USER\";","import React, { Component } from 'react';\n\nimport Navbar, { Text } from 'react-bootstrap/Navbar';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Nav from 'react-bootstrap/Nav';\nimport NavDropdown from 'react-bootstrap/NavDropdown';\nimport FormControl from 'react-bootstrap/FormControl';\n\nimport { Link, withRouter } from 'react-router-dom';\n\nimport { connect } from 'react-redux';\n\nimport { resetUser } from '../../../redux/actions';\n\nimport './Header.css'\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    handleLogout() {\n        const { resetUser, history } = this.props;\n        localStorage.removeItem(\"JWT\");\n        // remove the user from storage\n        resetUser();\n        // REDIRECT to /home\n        history.push(\"/login\");\n    }\n\n    isLoggedIn() {\n        return (this.props.user != null) ? (\n            <div className=\"auth\">\n                <a href=\"#\" className=\"navbar-left\">\n                    <img className=\"avi\" src={this.props.user.imageUrl ? this.props.user.imageUrl: ''}/>\n\n                    </a>\n                <Navbar.Text className=\"userName\">\n                    Signed in as: <Link to=\"/profile\">{this.props.user.name}</Link>\n                </Navbar.Text>\n                <Button variant=\"outline-success\" onClick={this.handleLogout.bind(this)}>Logout</Button>\n            </div>\n        ) : (\n                <div className=\"auth\">\n                    <Button className=\"loginBtn\" variant=\"outline-success\"><Link to=\"/login\">Login</Link></Button>\n                    <Button className=\"logoutBtn\" variant=\"outline-success\"><Link to=\"/signup\">Signup</Link></Button>\n                </div>\n            );\n    }\n\n    render() {\n        return (<Navbar bg=\"light\" expand=\"lg\">\n            <Navbar.Brand >Algo Vizualizer</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n            <Navbar.Collapse id=\"basic-navbar-nav\">\n                <Nav className=\"mr-auto\">\n                    <Nav.Link onClick={()=> {this.props.history.push(\"/\");}}>Home</Nav.Link>\n                    <NavDropdown title=\"Algorithms\" id=\"basic-nav-dropdown\">\n                        <NavDropdown.Item href=\"#action/3.1\">Recursive</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.2\">Dynamic programming</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.3\">Backtracking</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.4\">Divide and conquer</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.4\">Greedy</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.4\">Brute Force</NavDropdown.Item>\n                        <NavDropdown.Item href=\"#action/3.4\">Randomized</NavDropdown.Item>\n                    </NavDropdown>\n                </Nav>\n                <Form inline>\n                    {this.isLoggedIn()}\n                </Form>\n            </Navbar.Collapse>\n        </Navbar>);\n    }\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        user: state.user\n    };\n\n}\n\nexport default connect(mapStateToProps, { resetUser })(withRouter((Header)));","import React, {Component} from 'react';\n\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport InputGroup from 'react-bootstrap/InputGroup';\nimport FormControl from 'react-bootstrap/FormControl';\n\nconst Searchbar = (props) => {\n    return (\n        <div className=\"container h-100 d-flex justify-content-center h-100\">\n                <Form className=\"searchbar\">\n                    <InputGroup className=\"mb-3\">\n                        <FormControl\n                            placeholder=\"Search algorithm...\"\n                            aria-label=\"Search algorithm\"\n                            aria-describedby=\"basic-addon2\"\n                        />\n                        <InputGroup.Append>\n                            <Button variant=\"outline-secondary\">Go</Button>\n                        </InputGroup.Append>\n                    </InputGroup>\n                </Form>\n            </div>\n    );\n};\n\nexport default Searchbar;\n","export const BASE_URL = 'http://localhost:8080';\n\nexport const ALGORITHMS = [\n    {\n        name: \"Bubble Sort\",\n        imageURL: \"/images/bubblesort.png\"\n    },\n    {\n        name: \"Insertion Sort\",\n        imageURL: \"/images/insertionsort.png\"\n    },\n    {\n        name: \"Merge Sort\",\n        imageURL: \"/images/mergesort.png\"\n    },\n    {\n        name: \"Selection Sort\",\n        imageURL: \"/images/selectionsort.png\"\n    },\n    {\n        name: \"Quick Sort\",\n        imageURL: \"/images/quicksort.png\"\n    }\n];\n\nexport const authorizationLink = \"http://localhost:8080/oauth2/authorize/\";\n\nexport const redirectUri = \"http://localhost:3000/oauth2/redirect\";","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { ALGORITHMS } from '../../../constants/index';\nimport './AlgoList.css';\n\nclass AlgoList extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    componentDidMount() {\n\n    }\n\n    render() {\n\n        const algorithms = ALGORITHMS.map((algorithm, index) => (\n            <li className=\"algorithm\" key={index}>\n                <div className=\"li-wrapper\">\n                    <Link className=\"thumbnail\" to={\"algorithm/\" + algorithm.name.trim().toLowerCase()}> \n                        <img src={algorithm.imageURL} />\n                    </Link>\n\n                    <div className=\"info\">\n                        <h3>\n                            {algorithm.name}\n                        </h3>\n                    </div>\n                </div>\n            </li>\n        ));\n\n\n        return (\n            <div id=\"algolist\">\n                <ul className=\"list\">\n                    {algorithms}\n                </ul>\n            </div>\n        );\n    }\n}\n\nexport default AlgoList;","import React, {Component} from 'react';\n\nimport Searchbar from './searchbar/Searchbar';\nimport AlgoList from './algolist/AlgoList';\n\nimport './Home.css';\n\nclass Home extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div className=\"home\">\n                <Searchbar />\n                <AlgoList/>\n            </div>\n        );\n    }\n}\n\nexport default Home;","import React, { Component } from 'react';\n\nimport { connect } from 'react-redux';\n\nimport PropTypes from 'prop-types'\n\nimport './SvgTable.css';\n\nclass SvgTable extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        const { array, index, swap, sortedArray } = this.props;\n\n        const width = array.length > 100 ? 4 :\n            array.length > 50 ? 8 :\n                array.length > 10 ? 16 : 80;\n        const margin = array.length > 100 ? 1 :\n            array.length > 50 ? 2 :\n                array.length > 10 ? 4 : 20;\n        const bracket = array.length > 100 ? 200 :\n            array.length > 50 ? 100 :\n                array.length > 10 ? 50 : 10;\n\n        let startPoint = (1000 / bracket) * ((bracket - array.length) / 2);\n\n        return (\n            <div className=\"container d-flex justify-content-center\">\n                <svg height=\"800px\" width=\"1200px\">\n                    {\n                        array.length ? array.map((val, i) => {\n                            const x = i === 0 ? startPoint + margin / 2 : (i * width + i * margin + startPoint + margin / 2);\n                            const y = (400 - (3 * val));\n                            \n                            const rgb = (swap.index1 == i || swap.index2 == i) ? 'rgb(50,50,50)'\n                                : index.includes(i) ? 'rgb(200,150,44)'\n                                    : sortedArray.includes(i) ? 'rgb(20,70,25)' : 'rgb(76,163,221)';\n                            return (\n                                <g key={i} transform={`translate(${x},${y})`}>\n                                    <rect height={val * 3 + \"px\"} width={width} style={{ fill: rgb }}>\n\n                                    </rect>\n                                </g>\n                            )\n                        })\n                            : null\n                    }\n                </svg>\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        array: state.array,\n        index: state.index,\n        swap: state.swap,\n        sortedArray: state.sortedArray\n    };\n};\n\nSvgTable.propTypes = {\n    array: PropTypes.array.isRequired,\n    index: PropTypes.array.isRequired,\n    swap: PropTypes.array.isRequired,\n    sortedArray: PropTypes.array.isRequired\n};\n\nexport default connect(mapStateToProps, null)(SvgTable);","import { setArray, toSwap, addCurrentIndex, resetCurentIndex , addToSorted, resetSwap } from '../redux/actions';\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default async function bubbleSort(n, dispatch, pauseTime, func) {\n    let donePass = false;\n    let j = 0;\n\n    let arr = [ ...n ];\n\n    \n    while(true) {\n        for(let i = 0; i < arr.length - 1 - j; i++) {\n            if(func()) return;\n            dispatch(resetSwap());\n            dispatch(resetCurentIndex());\n            dispatch(addCurrentIndex(i));// add current index i\n            await sleep(pauseTime / 3);\n            if(arr[i] > arr[i+1]) {\n                dispatch(toSwap(i,i+1)); // add i, i+1 to swap\n                await sleep(pauseTime / 3);\n                let temp = arr[i+1];\n                arr[i+1]  = arr[i];\n                arr[i] = temp;\n                dispatch(setArray(arr));\n                donePass = true;\n            }\n        }\n        dispatch(addToSorted(arr.length - 1 - j));// add to sorted j\n        if(donePass == false) {\n            return;\n        }\n        else {\n            j++;\n            donePass = false;\n        }\n        await sleep(pauseTime / 3);// pause pauseTime seconds\n    }\n}","import { setArray, toSwap, addCurrentIndex, resetCurentIndex , addToSorted, resetSwap } from '../redux/actions';\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default async function insertionSort(n, dispatch, pauseTime, func) {\n    let pos;\n    let arr = [...n];\n    \n    for(let i = 1; i < arr.length; i++) {\n        pos = i;\n        dispatch(resetSwap());\n        dispatch(resetCurentIndex());\n        dispatch(addCurrentIndex(pos));\n        await sleep(pauseTime / 3);\n        for(let j = i - 1; j >= 0; j--) {\n            if(func()) return;\n            if(arr[pos] < arr[j]) {\n                dispatch(toSwap(pos,j));\n                await sleep(pauseTime / 3);\n                let temp = arr[j];\n                arr[j] = arr[pos];\n                arr[pos] = temp;\n                dispatch(setArray(arr));\n                pos = j;\n            }\n        }\n        dispatch(addToSorted(i - 1));\n        await sleep(pauseTime / 3);\n    }\n}","import { setArray, toSwap, addCurrentIndex, resetCurentIndex , addToSorted, resetSwap } from '../redux/actions';\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default async function insertionSort(n, dispatch, pauseTime, func) {\n    let arr = [...n];\n    for(let i = 0; i < arr.length - 1; i++) {\n        let min = i;\n        for(let j = i + 1; j < arr.length; j++) { \n            if(func()) return;\n            dispatch(resetCurentIndex());\n            dispatch(addCurrentIndex(j));\n            await sleep(pauseTime / 3);\n            if(arr[j] < arr[min]) {\n                min = j;\n            }\n        }\n        dispatch(toSwap(min,i));\n        await sleep(pauseTime / 3);\n        dispatch(resetSwap());\n        let temp = arr[i];\n        arr[i] = arr[min];\n        arr[min] = temp;\n        dispatch(setArray(arr));\n        dispatch(addToSorted(i));\n        await sleep(pauseTime / 3);\n\n    }\n}","import { setArray, toSwap, addCurrentIndex, resetCurentIndex, addToSorted, resetSwap } from '../redux/actions';\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default async function mergeSort(n, dispatch, pauseTime, func) {\n    let arr = [...n];\n    sort(arr,0, arr.length - 1, dispatch, pauseTime, func);\n}\n\nasync function sort(arr, l, r, dispatch, pauseTime, func) {\n    if (l < r) {\n        let q = Math.floor((l + r) / 2);\n        await sort(arr, l, q, dispatch, pauseTime, func);\n        await sort(arr, q + 1, r, dispatch, pauseTime, func);\n        await merge(arr, l, q, r, dispatch, pauseTime, func);\n        for(let i = l ; i < r; i++) {\n            if(func()) return;\n            dispatch(addToSorted(i));\n            await sleep(pauseTime / 3);\n        }\n    }\n}\n\nasync function merge(arr, l, q, r, dispatch, pauseTime, func) {\n    let i, j, k;\n    let n1 = q - l + 1;\n    let n2 = r - q;\n\n    let L = [];\n    let R = [];\n\n    for (i = 0; i < n1; i++)\n        L[i] = arr[l + i];\n    for (j = 0; j < n2; j++)\n        R[j] = arr[q + 1 + j];\n\n    L[i] = Number.MAX_SAFE_INTEGER;\n    R[j] = Number.MAX_SAFE_INTEGER;\n\n    i = 0; j = 0; k = l;\n    while (k <= r) {\n        if(func()) return;\n        dispatch(resetCurentIndex());\n        dispatch(addCurrentIndex(k));\n        await sleep(pauseTime / 3);\n        if (L[i] <= R[j]) {\n            dispatch(resetSwap());\n            dispatch(toSwap(j,i));\n            arr[k] = L[i++];\n            await dispatch(setArray(arr));\n            await sleep(pauseTime / 3);\n        }\n        else if (R[j] < L[i]) {\n            dispatch(resetSwap());\n            dispatch(toSwap(j,i));\n            arr[k] = R[j++];\n            await dispatch(setArray(arr));\n            await sleep(pauseTime / 3);\n        }\n        k++;\n    }\n}","import { setArray, toSwap, addCurrentIndex, resetCurentIndex , resetIndexAt, addIndexAt, addToSorted, resetSwap } from '../redux/actions';\n\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\n\nexport default async function quickSort(n, dispatch, pauseTime, func) {\n    let arr = [...n];\n    sort(arr,0,arr.length - 1, dispatch, pauseTime, func);\n}\n\nasync function sort(n,l,r, dispatch, pauseTime, func) { \n    let i = l, j = r, p = n[Math.floor((l+r)/2)];\n\n    while(i <= j) {\n        dispatch(resetCurentIndex());\n        if(func()) return;\n        while(n[i] < p) {\n            dispatch(resetIndexAt(0)); // left index will be stored at position 0 of the index array\n            dispatch(addIndexAt(i,0)); \n            await sleep(pauseTime / 3);\n            i++;\n        }\n        while(n[j] > p) {\n            dispatch(resetIndexAt(1)); // // right index will be stored at position 1 of the index array\n            dispatch(addIndexAt(j,1));\n            await sleep(pauseTime / 3);\n            j--;\n        }\n        if(i <= j) {\n            let temp = n[i];\n            n[i] = n[j];\n            n[j] = temp;\n            dispatch(setArray(n));\n            await sleep(pauseTime / 3);\n            dispatch(toSwap(i,j));\n            await sleep(pauseTime / 3);\n            dispatch(resetSwap());\n            i++;\n            j--;\n            dispatch(resetCurentIndex());\n            dispatch(addCurrentIndex(i));\n            dispatch(addCurrentIndex(j));\n        }\n    }\n    dispatch(setArray(n));\n    await sleep(pauseTime / 3);\n   \n    if(j > l) await sort(n, l, j, dispatch, pauseTime, func);\n    else {dispatch(addToSorted(j));dispatch(addToSorted(j+1)); await sleep(pauseTime / 3);}\n    if(i < r) await sort(n, i, r, dispatch, pauseTime, func);\n    else {dispatch(addToSorted(i));dispatch(addToSorted(i+1));await sleep(pauseTime / 3);}\n}","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport Button from 'react-bootstrap/Button';\nimport SvgTable from './svgtable/SvgTable';\n\nimport { connect } from 'react-redux';\nimport { newArray, resetCurentIndex, resetSwap, resetSorted } from '../../redux/actions';\n\nimport bubbleSort from '../../algorithms/bubblesort';\nimport insertionSort from '../../algorithms/insertionsort';\nimport selectionSort from '../../algorithms/selectionsort';\nimport mergeSort from '../../algorithms/mergesort';\nimport quickSort from '../../algorithms/quicksort';\n\nimport './Algorithm.css'\n\nclass Algorithm extends Component {\n    constructor(props) {\n        super(props);\n        this.speedSliderDefault = 50; // ms\n    }\n\n    componentDidMount() {\n        this.props.newArray(40);\n        this.props.resetArrays();\n        this.algorithmOn = false;\n    }\n\n    componentWillUnmount() {\n        this.algorithmOn = true;\n    }\n\n    handleChange(e) {\n        //this.sliderDefaultValue = e.target.value;\n        if (e.target.name == \"sliderRange\") this.props.newArray(parseInt(e.target.value));\n        else if (e.target.name == \"sliderSpeed\") this.speedSliderDefault = parseInt(e.target.value);\n    }\n\n    stopAlgorithm() {\n        return this.algorithmOn;\n    }\n\n    startAlgorithm() {\n        switch (this.props.match.params.id) {\n            case \"bubble sort\":\n                this.props.bubbleSort(this.props.array, this.speedSliderDefault, this.stopAlgorithm.bind(this));\n                break;\n            case \"insertion sort\":\n                this.props.insertionSort(this.props.array, this.speedSliderDefault, this.stopAlgorithm.bind(this));\n                break;\n            case \"merge sort\":\n                this.props.mergeSort(this.props.array, this.speedSliderDefault, this.stopAlgorithm.bind(this));\n                break;\n            case \"selection sort\":\n                this.props.selectionSort(this.props.array, this.speedSliderDefault, this.stopAlgorithm.bind(this));\n                break;\n            case \"quick sort\":\n                this.props.quickSort(this.props.array, this.speedSliderDefault, this.stopAlgorithm.bind(this));\n                break;\n            default:\n                break;\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"AlgorithmTable\">\n                <div className=\"tableHeader\">\n                    <Button id=\"btnBack\" variant=\"outline-primary\" onClick={() => { this.algorithmOn = true; this.props.history.push('/'); }}>Back</Button>\n                    <label htmlFor=\"customRange1\">Range</label>\n                    <input name=\"sliderRange\" id=\"sliderForRange\" type=\"range\" onChange={this.handleChange.bind(this)} min=\"10\" max=\"200\" className=\"custom-range\" />\n                    <label htmlFor=\"customRange1\">Animation Speed</label>\n                    <input name=\"sliderSpeed\" id=\"sliderForSpeed\" type=\"range\" onChange={this.handleChange.bind(this)} min=\"1\" max=\"2000\" className=\"custom-range\" />\n                    <Button id=\"btnStart\" variant=\"danger\" onClick={this.startAlgorithm.bind(this)}>Start</Button>\n                </div>\n                <SvgTable></SvgTable>\n            </div>\n        );\n    }\n}\n\nconst mapDispatchToProps = dispatch => ({\n    bubbleSort: (array, pauseTime, func) => {\n        bubbleSort(array, dispatch, pauseTime, func);\n    },\n    insertionSort: (array, pauseTime, func) => {\n        insertionSort(array, dispatch, pauseTime, func);\n    },\n    mergeSort: (array, pauseTime, func) => {\n        mergeSort(array, dispatch, pauseTime, func);\n    },\n    selectionSort: (array, pauseTime, func) => {\n        selectionSort(array, dispatch, pauseTime, func);\n    },\n    quickSort: (array, pauseTime, func) => {\n        quickSort(array, dispatch, pauseTime, func);\n    },\n    newArray: (size) => { dispatch(newArray(size)) },\n    resetArrays: () => {\n        dispatch(resetSwap());\n        dispatch(resetCurentIndex());\n        dispatch(resetSorted());\n    }\n});\n\nfunction mapStateToProps(state) {\n    return {\n        array: state.array\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(Algorithm));","import React, { Component } from 'react';\n\nimport './Login.css';\n\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Form, { Group, Label, Control, Text, Check } from 'react-bootstrap/Form';\n\nimport { connect } from 'react-redux';\nimport { addUser } from '../../redux/actions';\n\nimport { withRouter } from 'react-router-dom';\n\nimport queryString from 'query-string';\n\nimport { authorizationLink, redirectUri } from '../../constants';\n\nimport { BASE_URL } from '../../constants';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: {\n                usernameOrEmail: \"\",\n                password: \"\",\n                error: \"\"\n            }\n        }\n    }\n\n    componentDidMount() {\n        /*\n        if(this.props.location.state.hasOwnProperty(\"from\")) {\n            const error = queryString.parse(this.props.location.state.from.search).error;\n            console.log(error);\n        }\n        */\n        if (this.props.location.state) {\n            const error = queryString.parse(this.props.location.state.from.search).error;\n            this.setState({error});\n        }\n    }\n\n    handleChange(e) {\n        let item = { ...this.state.item };\n        item[e.target.name] = e.target.value;\n        this.setState({ item });\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const { item } = this.state;\n        await fetch(BASE_URL + '/auth/login',\n            {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({usernameOrEmail:item.usernameOrEmail, password: item.password})\n            }\n        ).then(response => {return response.headers.get(\"Authorization\")}).then(jwt => {\n            localStorage.setItem(\"JWT\", jwt);\n        });\n        await fetch(BASE_URL + '/user/me', {\n            method: 'GET',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n                'Authorization': localStorage.getItem(\"JWT\")\n            }\n        }).then(response => response.json()).then(user => {\n            this.props.addUser(user);\n            this.props.history.push(\"/\");\n        });\n    }\n\n    render() {\n        return (\n            <div className=\"login-container\">\n                <h1>Login</h1>\n                <div className=\"login-content\">\n                    <Form onSubmit={this.handleSubmit.bind(this)}>\n                    <p id=\"errorText\" className=\"hint-text\">{this.state.error}</p>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label className=\"loginLabels\" >Email address</Form.Label>\n                            <Form.Control name=\"usernameOrEmail\" onChange={this.handleChange.bind(this)} placeholder=\"Enter Username or Email\" />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label className=\"loginLabels\" >Password</Form.Label>\n                            <Form.Control type=\"password\" name=\"password\" onChange={this.handleChange.bind(this)} placeholder=\"*******\" />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicCheckbox\">\n                            <Form.Check className=\"loginLabels\" type=\"checkbox\" label=\"Remember me\" />\n                        </Form.Group>\n                        \n                        <Button id=\"loginBtn\" variant=\"primary\" type=\"submit\">\n                            Submit\n                        </Button>\n                        <div className=\"d-flex\">\n                            <hr className=\"my-auto flex-grow-1\"></hr>\n                            <div className=\"px-4\">or</div>\n                            <hr className=\"my-auto flex-grow-1\"></hr>\n                        </div>\n                        <p className=\"hint-text\">Sign up with your social media account or email address</p>\n                        <ButtonGroup className=\"social-btn text-center btn-group-vertical btn-group-justified\">\n                            <Button id=\"btnFacebook\" variant = \"\" className=\"btnOauth2\" onClick={()=> {window.location.href = authorizationLink + \"facebook?redirect_uri=\" + redirectUri}}>\n                                Facebook\n                            </Button>\n                            <Button id=\"btnGoogle\" variant=\"\" className=\"btnOauth2\" onClick={()=> {window.location.href = authorizationLink + \"google?redirect_uri=\" + redirectUri}}>\n                                Google\n                            </Button>\n                            <Button id=\"btnGithub\" variant=\"\" className=\"btnOauth2\" onClick={()=> {window.location.href = authorizationLink + \"github?redirect_uri=\" + redirectUri}}>\n                                Github\n                            </Button>\n                        </ButtonGroup>\n                    </Form>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default connect(null, { addUser })(withRouter(Login));","import React, { Component } from 'react';\n\nimport Form, { Group, Label, Control, Text, Check } from 'react-bootstrap/Form';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport Button from 'react-bootstrap/Button';\n\nimport { Link } from 'react-router-dom';\n\nimport { authorizationLink, redirectUri } from '../../constants';\n\nimport { withRouter } from 'react-router-dom';\n\nimport { BASE_URL } from '../../constants';\n\nimport './Signup.css';\n\nclass Signup extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            item: {\n                name: \"\",\n                username: \"\",\n                email: \"\",\n                password: \"\"\n            }\n        }\n    }\n\n    handleChange(event) {\n        let item = { ...this.state.item };\n        item[event.target.name] = event.target.value;\n        this.setState({ item });\n    }\n\n    async handleSubmit(event) {\n        event.preventDefault();\n        const { item } = this.state;\n        await fetch(BASE_URL + '/auth/sign-up',\n            {\n                method: 'POST',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(item)\n            }\n        ).then(() => {this.props.history.push(\"/\");});\n    }\n\n    render() {\n        return (\n            <div className=\"login-container\">\n                <Form onSubmit={this.handleSubmit.bind(this)}>\n                    <p className=\"hint-text\">Sign up with your social media account or email address</p>\n                    <ButtonGroup className=\"social-btn text-center btn-group-vertical btn-group-justified\">\n                        <Button id=\"btnFacebook\" variant=\"\" className=\"btnOauth2\" onClick={() => { window.location.href = authorizationLink + \"facebook?redirect_uri=\" + redirectUri }}>\n                            Facebook\n                            </Button>\n                        <Button id=\"btnGoogle\" variant=\"\" className=\"btnOauth2\" onClick={() => { window.location.href = authorizationLink + \"google?redirect_uri=\" + redirectUri }}>\n                            Google\n                            </Button>\n                        <Button id=\"btnGithub\" variant=\"\" className=\"btnOauth2\" onClick={() => { window.location.href = authorizationLink + \"github?redirect_uri=\" + redirectUri }}>\n                            Github\n                            </Button>\n                    </ButtonGroup>\n                    <div className=\"d-flex\">\n                        <hr className=\"my-auto flex-grow-1\"></hr>\n                        <div className=\"px-4\">or</div>\n                        <hr className=\"my-auto flex-grow-1\"></hr>\n                    </div>\n                    <h2>Create an Account</h2>\n                    <Form.Group>\n                        <Form.Control placeholder=\"Name\" name=\"name\" onChange={this.handleChange.bind(this)} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Control placeholder=\"Username\" name=\"username\" onChange={this.handleChange.bind(this)} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Control type=\"email\" placeholder=\"Email\" name=\"email\" onChange={this.handleChange.bind(this)} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Form.Control type=\"password\" placeholder=\"*******\" name=\"password\" required=\"required\" onChange={this.handleChange.bind(this)} />\n                    </Form.Group>\n                    <Form.Group>\n                        <Button variant=\"primary\" className=\"btn btn-success btn-lg btn-block signup-btn\" type=\"submit\">\n                            Submit\n                        </Button>\n                    </Form.Group>\n                </Form>\n                <div className=\"text-center\">Already have an account? Log in <Link to=\"/login\">here</Link></div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Signup);","import React, { Component } from 'react';\n\nimport { Redirect, withRouter } from 'react-router-dom';\n\nimport queryString from 'query-string';\n\nimport { connect } from 'react-redux';\nimport { addUser } from '../../../redux/actions';\n\nimport { BASE_URL } from '../../../constants';\n\nclass RedirectOauth2 extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            token: \"\",\n            error: \"\"\n        }\n    }\n\n    async componentWillMount() {\n        const values = queryString.parse(this.props.location.search);\n        const token = values.jwt;\n        const error = values.error;\n\n        if (token) {\n            await this.setState({ token: token, error: error });\n            localStorage.setItem(\"JWT\", token);\n            await fetch(BASE_URL + '/user/me', {\n                method: 'GET',\n                headers: {\n                    'Accept': 'application/json',\n                    'Content-Type': 'application/json',\n                    'Authorization': token\n                }\n            }).then(response => response.json()).then(user => {\n                this.props.addUser(user);\n            });\n        }\n    }\n\n    render() {\n        const { token, error } = this.state;\n        if (token) {\n            return <Redirect to={{\n                pathname: \"/\",\n                state: { from: this.props.location }\n            }} />;\n        }\n        else {\n            return <Redirect to={{\n                pathname: \"/login\",\n                state: {\n                    from: this.props.location\n                }\n            }} />;\n        }\n    }\n}\n\nexport default connect(null, { addUser })(withRouter(RedirectOauth2));","import React from 'react';\nimport './App.css';\n\nimport Header from '../common/header/Header';\nimport Home from '../home/Home';\nimport Algorithm from '../algorithm/Algorithm';\nimport Login from '../login/Login';\nimport Signup from '../signup/Signup';\nimport RedirectOauth2 from '../oauth2/Redirect';\n\nimport { Route, Switch } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Header />\n      <div id=\"main\">\n        <Switch>\n          <Route path=\"/\" exact={true} component={Home} />\n          <Route path=\"/login\" exact={true} component={Login} />\n          <Route path=\"/signup\" exact={true} component={Signup} />\n          <Route path='/algorithm/:id' component={Algorithm}/>\n          <Route path='/oauth2/redirect' exact={true} component={RedirectOauth2}/>\n        </Switch>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {RESET_ARRAY, NEW_ARRAY, SET_ARRAY} from '../../constants'\n\nconst initialState = [];\n\nconst MAX_NUMBER = 40;\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case RESET_ARRAY:\n            return [];\n        case SET_ARRAY:\n            return [ ...action.payload ];\n        case NEW_ARRAY:\n            return [...Array(action.payload)].map(_=>Math.floor(Math.random()*80));\n        default:\n            return state;\n    }\n}","import { ADD_CURRENT_INDEX, RESET_CURRENT_INDEX, RESET_INDEX_AT, ADD_INDEX_AT } from '../../constants';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n    let arr = [...state];\n    switch(action.type) {\n        case ADD_CURRENT_INDEX:\n            return [...state, action.payload];\n        case ADD_INDEX_AT:\n            arr[action.payload.position] = action.payload.val;\n            return arr;\n        case RESET_CURRENT_INDEX:\n            return [];\n        case RESET_INDEX_AT:\n            arr[action.payload] = null;\n            return arr;\n        default:\n            return state;\n    }\n}","import { TO_SWAP, RESET_SWAP } from '../../constants'\n\nconst initialState = {\n    index1: null,\n    index2: null\n};\n\nexport default function(defaultState = initialState, action) {\n    switch(action.type) {\n        case TO_SWAP:\n            return {...defaultState, index1: action.payload.index1, index2: action.payload.index2};\n        case RESET_SWAP:\n            return {\n                index1: null,\n                index2: null\n            }\n        default:\n            return defaultState;\n    }\n}\n","import { ADD_TO_SORTED, RESET_SORTED } from '../../constants';\n\nconst initialState = [];\n\nexport default function(state = initialState, action) {\n    switch (action.type) {\n        case ADD_TO_SORTED:\n            return [...state, action.payload];\n        case RESET_SORTED:\n            return [];\n        default:\n            return state;\n    }\n}","import { ADD_USER, RESET_USER } from '../../constants'\n\nconst initialState = null;\n\nexport default function(defaultState = initialState, action) {\n    switch(action.type) {\n        case ADD_USER:\n            return {...action.payload};\n        case RESET_USER:\n            return null;\n        default:\n            return defaultState;\n    }\n}\n","import { combineReducers } from \"redux\";\nimport array from './array';\nimport index from './currentIndex';\nimport swap from './swap';\nimport sortedArray from './sortedArray';\nimport user from './user';\n\nexport default combineReducers({ user, array, index, swap, sortedArray });\n","import { createStore } from \"redux\";\nimport rootReducer from \"./reducers\";\n\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\n\nconst persistConfig = {\n    key: 'root',\n    storage: storage,\n    stateReconciler: autoMergeLevel2, // see \"Merge Process\" section for details.\n    whitelist: ['user'],\n    blacklist: ['array', 'index', 'swap', 'sortedArray']\n};\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store =  createStore(pReducer);\n\nexport const persistor = persistStore(store);\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/app/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\nimport { persistor, store } from '../src/redux/store';\n\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={<div>Waiting for the state to be persisted</div>} persistor={persistor}>\n            <Router>\n                <App />\n            </Router>\n        </PersistGate>\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}